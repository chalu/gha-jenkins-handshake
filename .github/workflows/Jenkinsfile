#!/usr/bin/env groovy
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import hudson.model.Actionable;

pipeline {
  agent {
    label 'main'
  }

  stages {

    stage('Build Artifact') {
      steps {
        sh "docker run --name sb-mongo -d mongo:latest"
      }
    }

    stage('Deploy to TESTING') {

        steps {
            
            script {
                def ghaURL = "https://api.github.com/repos/chalu/gha-jenkins-handshake/actions/workflows/12145487/dispatches"
                def ghaHeaders = [
                    [name: 'Accept', value: 'application/vnd.github.v3+json']
                    [name: 'Authorization', value: 'token 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']
                ]

                JSONObject ghaTestTarget = new JSONObject();
                ghaTestTarget.put('environment', 'testing');

                JSONObject ghaData = new JSONObject();
                ghaData.put('ref', 'develop');
                ghaData.put('inputs', ghaTestTarget);
            }

            httpRequest (
                httpMode: 'POST',
                url: "${ghaURL}",
                requestBody: "${ghaData}",
                consoleLogResponseBody: true,
                customHeaders: "${ghaHeaders}",
                contentType: 'APPLICATION_JSON',
                acceptType: 'APPLICATION_JSON'
            )

            // httpRequest(url: "${ghaURL}", httpMode: 'POST', requestBody: "${ghaData}", customHeaders: "${ghaHeaders}", acceptType: 'APPLICATION_JSON', contentType: 'APPLICATION_JSON')
        }
    }
    
  }

  post {
    always {
      sh "docker container sb-mongo stop"

      cleanWs()
    }
  }
}
