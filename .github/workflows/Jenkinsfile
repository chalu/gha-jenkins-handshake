pipeline {
  agent {
    label 'main'
  }

  stages {

    stage('Build Artifact') {
      steps {
        sh "docker run --name sb-mongo -d mongo:latest"
      }
    }

    stage('Deploy to TESTING') {
      script {
          
      }

      steps {
        // def ghaData = readJSON text: '{ "key": "value", "inputs": "" }', returnPojo: true
        // ghaData.inputs = { "environment": "testing" }

        // def ghaURL = "https://api.github.com/repos/chalu/gha-jenkins-handshake/actions/workflows/12145487/dispatches"

        // def ghaHeaders = [
        //       [name: 'Accept', value: 'application/vnd.github.v3+json']
        //       [name: 'Authorization', value: 'token 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']
        // ]
        // httpRequest(url: "${ghaURL}", httpMode: 'POST', requestBody: "${ghaData}", customHeaders: "${ghaHeaders}", acceptType: 'APPLICATION_JSON', contentType: 'APPLICATION_JSON')
        sh '''
            curl -X POST \ 
            -H "Accept: application/vnd.github.v3+json" -H "Authorization: token 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" \
            https://api.github.com/repos/chalu/gha-jenkins-handshake/actions/workflows/12145487/dispatches \
            -d '{"ref":"develop", "inputs": { "environment":"testing" }}'
        '''
      }
    }
    
  }

  post {
    always {
      sh "docker container sb-mongo stop"

      cleanWs()
    }
  }
}
